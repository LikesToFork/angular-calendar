{"version":3,"sources":["../../../../../src/components/month/calendarMonthView.component.ts"],"names":[],"mappings":"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","file":"calendarMonthView.component.js","sourceRoot":"","sourcesContent":["import {\r\n  Component,\r\n  OnChanges,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ChangeDetectorRef,\r\n  OnInit,\r\n  OnDestroy,\r\n  LOCALE_ID,\r\n  Inject,\r\n  TemplateRef\r\n} from '@angular/core';\r\nimport {\r\n  CalendarEvent,\r\n  WeekDay,\r\n  MonthView,\r\n  MonthViewDay\r\n} from 'calendar-utils';\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport isSameDay from 'date-fns/is_same_day';\r\nimport setDate from 'date-fns/set_date';\r\nimport setMonth from 'date-fns/set_month';\r\nimport setYear from 'date-fns/set_year';\r\nimport getDate from 'date-fns/get_date';\r\nimport getMonth from 'date-fns/get_month';\r\nimport getYear from 'date-fns/get_year';\r\nimport differenceInSeconds from 'date-fns/difference_in_seconds';\r\nimport addSeconds from 'date-fns/add_seconds';\r\nimport { CalendarEventTimesChangedEvent } from '../../interfaces/calendarEventTimesChangedEvent.interface';\r\nimport { CalendarUtils } from '../../providers/calendarUtils.provider';\r\n\r\n/**\r\n * Shows all events on a given month. Example usage:\r\n *\r\n * ```typescript\r\n * &lt;mwl-calendar-month-view\r\n *  [viewDate]=\"viewDate\"\r\n *  [events]=\"events\"&gt;\r\n * &lt;/mwl-calendar-month-view&gt;\r\n * ```\r\n */\r\n\r\nexport class CalendarMonthViewComponent implements OnChanges, OnInit, OnDestroy {\r\n\r\n  /**\r\n   * The current view date\r\n   */\r\n   viewDate: Date;\r\n\r\n  /**\r\n   * An array of events to display on view\r\n   */\r\n   events: CalendarEvent[] = [];\r\n\r\n  /**\r\n   * An array of day indexes (0 = sunday, 1 = monday etc) that will be hidden on the view\r\n   */\r\n   excludeDays: number[] = [];\r\n\r\n  /**\r\n   * Whether the events list for the day of the `viewDate` option is visible or not\r\n   */\r\n   activeDayIsOpen: boolean = false;\r\n\r\n  /**\r\n   * A function that will be called before each cell is rendered. The first argument will contain the calendar cell.\r\n   * If you add the `cssClass` property to the cell it will add that class to the cell in the template\r\n   */\r\n   dayModifier: Function;\r\n\r\n  /**\r\n   * An observable that when emitted on will re-render the current view\r\n   */\r\n   refresh: Subject<any>;\r\n\r\n  /**\r\n   * The locale used to format dates\r\n   */\r\n   locale: string;\r\n\r\n  /**\r\n   * The placement of the event tooltip\r\n   */\r\n   tooltipPlacement: string = 'top';\r\n\r\n  /**\r\n   * The start number of the week\r\n   */\r\n   weekStartsOn: number;\r\n\r\n  /**\r\n   * A custom template to use to replace the header\r\n   */\r\n   headerTemplate: TemplateRef<any>;\r\n\r\n  /**\r\n   * A custom template to use to replace the day cell\r\n   */\r\n   cellTemplate: TemplateRef<any>;\r\n\r\n  /**\r\n   * A custom template to use to replace the day cell\r\n   */\r\n   openDayEventsTemplate: TemplateRef<any>;\r\n\r\n  /**\r\n   * Called when the day cell is clicked\r\n   */\r\n   dayClicked: EventEmitter<{day: MonthViewDay}> = new EventEmitter<{day: MonthViewDay}>();\r\n\r\n  /**\r\n   * Called when the event title is clicked\r\n   */\r\n   eventClicked: EventEmitter<{event: CalendarEvent}> = new EventEmitter<{event: CalendarEvent}>();\r\n\r\n  /**\r\n   * Called when an event is dragged and dropped\r\n   */\r\n   eventTimesChanged: EventEmitter<CalendarEventTimesChangedEvent> = new EventEmitter<CalendarEventTimesChangedEvent>();\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  columnHeaders: WeekDay[];\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  view: MonthView;\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  openRowIndex: number;\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  openDay: MonthViewDay;\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  refreshSubscription: Subscription;\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  constructor(private cdr: ChangeDetectorRef, private utils: CalendarUtils,  locale: string) {\r\n    this.locale = locale;\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  ngOnInit(): void {\r\n    if (this.refresh) {\r\n      this.refreshSubscription = this.refresh.subscribe(() => {\r\n        this.refreshAll();\r\n        this.cdr.markForCheck();\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  ngOnChanges(changes: any): void {\r\n\r\n    if (changes.viewDate || changes.excludeDays) {\r\n      this.refreshHeader();\r\n    }\r\n\r\n    if (changes.viewDate || changes.events || changes.excludeDays) {\r\n      this.refreshBody();\r\n    }\r\n\r\n    if (changes.activeDayIsOpen || changes.viewDate || changes.events || changes.excludeDays) {\r\n      this.checkActiveDayIsOpen();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  ngOnDestroy(): void {\r\n    if (this.refreshSubscription) {\r\n      this.refreshSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  toggleDayHighlight(event: CalendarEvent, isHighlighted: boolean): void {\r\n    this.view.days.forEach(day => {\r\n      if (isHighlighted && day.events.indexOf(event) > -1) {\r\n        day.backgroundColor = event.color.secondary;\r\n      } else {\r\n        delete day.backgroundColor;\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  eventDropped(day: MonthViewDay, event: CalendarEvent): void {\r\n    const year: number = getYear(day.date);\r\n    const month: number = getMonth(day.date);\r\n    const date: number = getDate(day.date);\r\n    const newStart: Date = setDate(setMonth(setYear(event.start, year), month), date);\r\n    let newEnd: Date;\r\n    if (event.end) {\r\n      const secondsDiff: number = differenceInSeconds(newStart, event.start);\r\n      newEnd = addSeconds(event.end, secondsDiff);\r\n    }\r\n    this.eventTimesChanged.emit({event, newStart, newEnd});\r\n  }\r\n\r\n  private refreshHeader(): void {\r\n    this.columnHeaders = this.utils.getWeekViewHeader({\r\n      viewDate: this.viewDate,\r\n      weekStartsOn: this.weekStartsOn,\r\n      excluded: this.excludeDays\r\n    });\r\n  }\r\n\r\n  private refreshBody(): void {\r\n    this.view = this.utils.getMonthView({\r\n      events: this.events,\r\n      viewDate: this.viewDate,\r\n      weekStartsOn: this.weekStartsOn,\r\n      excluded: this.excludeDays\r\n    });\r\n    if (this.dayModifier) {\r\n      this.view.days.forEach(day => this.dayModifier(day));\r\n    }\r\n  }\r\n\r\n  private checkActiveDayIsOpen(): void {\r\n    if (this.activeDayIsOpen === true) {\r\n      this.openDay = this.view.days.find(day => isSameDay(day.date, this.viewDate));\r\n      const index: number = this.view.days.indexOf(this.openDay);\r\n      this.openRowIndex = Math.floor(index / this.view.totalDaysVisibleInWeek) * this.view.totalDaysVisibleInWeek;\r\n    } else {\r\n      this.openRowIndex = null;\r\n      this.openDay = null;\r\n    }\r\n  }\r\n\r\n  private refreshAll(): void {\r\n    this.refreshHeader();\r\n    this.refreshBody();\r\n    this.checkActiveDayIsOpen();\r\n  }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n  selector: 'mwl-calendar-month-view',\r\n  template: `\r\n    <div class=\"cal-month-view\">\r\n      <mwl-calendar-month-view-header\r\n        [days]=\"columnHeaders\"\r\n        [locale]=\"locale\"\r\n        [customTemplate]=\"headerTemplate\">\r\n      </mwl-calendar-month-view-header>\r\n      <div class=\"cal-days\">\r\n        <div *ngFor=\"let rowIndex of view.rowOffsets\">\r\n          <div class=\"cal-cell-row\">\r\n            <mwl-calendar-month-cell\r\n              *ngFor=\"let day of view.days | slice : rowIndex : rowIndex + (view.totalDaysVisibleInWeek)\"\r\n              [class.cal-drag-over]=\"day.dragOver\"\r\n              [ngClass]=\"day?.cssClass\"\r\n              [day]=\"day\"\r\n              [openDay]=\"openDay\"\r\n              [locale]=\"locale\"\r\n              [tooltipPlacement]=\"tooltipPlacement\"\r\n              [customTemplate]=\"cellTemplate\"\r\n              (click)=\"dayClicked.emit({day: day})\"\r\n              (highlightDay)=\"toggleDayHighlight($event.event, true)\"\r\n              (unhighlightDay)=\"toggleDayHighlight($event.event, false)\"\r\n              mwlDroppable\r\n              (dragEnter)=\"day.dragOver = true\"\r\n              (dragLeave)=\"day.dragOver = false\"\r\n              (drop)=\"day.dragOver = false; eventDropped(day, $event.dropData.event)\"\r\n              (eventClicked)=\"eventClicked.emit({event: $event.event})\">\r\n            </mwl-calendar-month-cell>\r\n          </div>\r\n          <mwl-calendar-open-day-events\r\n            [isOpen]=\"openRowIndex === rowIndex\"\r\n            [events]=\"openDay?.events\"\r\n            [customTemplate]=\"openDayEventsTemplate\"\r\n            (eventClicked)=\"eventClicked.emit({event: $event.event})\">\r\n          </mwl-calendar-open-day-events>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ChangeDetectorRef, },\n{type: CalendarUtils, },\n{type: undefined, decorators: [{ type: Inject, args: [LOCALE_ID, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'viewDate': [{ type: Input },],\n'events': [{ type: Input },],\n'excludeDays': [{ type: Input },],\n'activeDayIsOpen': [{ type: Input },],\n'dayModifier': [{ type: Input },],\n'refresh': [{ type: Input },],\n'locale': [{ type: Input },],\n'tooltipPlacement': [{ type: Input },],\n'weekStartsOn': [{ type: Input },],\n'headerTemplate': [{ type: Input },],\n'cellTemplate': [{ type: Input },],\n'openDayEventsTemplate': [{ type: Input },],\n'dayClicked': [{ type: Output },],\n'eventClicked': [{ type: Output },],\n'eventTimesChanged': [{ type: Output },],\n};\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}