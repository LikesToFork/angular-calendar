{"version":3,"sources":["../../../../../src/components/month/calendarOpenDayEvents.component.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,SAAS,EACT,KAAK,EACL,MAAM,EACN,YAAY,EAEb,MAAM,eAAA,CAAgB;AACvB,OAAO,EACL,OAAO,EACP,KAAK,EACL,UAAU,EACV,OAAO,EACR,MAAM,qBAAA,CAAsB;AAI7B;IAAA;QAEG,WAAM,GAAY,KAAK,CAAC;QAMxB,iBAAY,GAAyC,IAAI,YAAY,EAA0B,CAAC;IA0DnG,CAAC;IAAD,qCAAC;AAAD,CAlEA,AAkEC;;AAxDM,yCAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACxB,QAAQ,EAAE,8BAA8B;gBACxC,QAAQ,EAAE,s+BA6BT;gBACD,UAAU,EAAE;oBACV,OAAO,CAAC,UAAU,EAAE;wBAClB,UAAU,CAAC,WAAW,EAAE;4BACtB,KAAK,CAAC,EAAC,MAAM,EAAE,CAAC,EAAC,CAAC;4BAClB,OAAO,CAAC,cAAc,EAAE,KAAK,CAAC,EAAC,MAAM,EAAE,GAAG,EAAC,CAAC,CAAC;yBAC9C,CAAC;wBACF,UAAU,CAAC,WAAW,EAAE;4BACtB,KAAK,CAAC,EAAC,MAAM,EAAE,GAAG,EAAC,CAAC;4BACpB,OAAO,CAAC,cAAc,EAAE,KAAK,CAAC,EAAC,MAAM,EAAE,CAAC,EAAC,CAAC,CAAC;yBAC5C,CAAC;qBACH,CAAC;iBACH;aACF,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,6CAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;AACK,6CAAc,GAA2C;IAChE,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC5B,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC5B,gBAAgB,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IACpC,cAAc,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;CAClC,CAAC","file":"calendarOpenDayEvents.component.js","sourceRoot":"","sourcesContent":["import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  TemplateRef\r\n} from '@angular/core';\r\nimport {\r\n  trigger,\r\n  style,\r\n  transition,\r\n  animate\r\n} from '@angular/animations';\r\nimport { CalendarEvent } from 'calendar-utils';\r\n\r\n\r\nexport class CalendarOpenDayEventsComponent {\r\n\r\n   isOpen: boolean = false;\r\n\r\n   events: CalendarEvent[];\r\n\r\n   customTemplate: TemplateRef<any>;\r\n\r\n   eventClicked: EventEmitter<{event: CalendarEvent}> = new EventEmitter<{event: CalendarEvent}>();\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n  selector: 'mwl-calendar-open-day-events',\r\n  template: `\r\n    <ng-template #defaultTemplate>\r\n      <div\r\n        *ngFor=\"let event of events\"\r\n        [ngClass]=\"event?.cssClass\"\r\n        mwlDraggable\r\n        [dropData]=\"{event: event}\"\r\n        [dragAxis]=\"{x: event.draggable, y: event.draggable}\">\r\n        <span\r\n          class=\"cal-event\"\r\n          [style.backgroundColor]=\"event.color.primary\">\r\n        </span>\r\n        <mwl-calendar-event-title\r\n          [event]=\"event\"\r\n          view=\"month\"\r\n          (mwlClick)=\"eventClicked.emit({event: event})\">\r\n        </mwl-calendar-event-title>\r\n        <mwl-calendar-event-actions [event]=\"event\"></mwl-calendar-event-actions>\r\n      </div>\r\n    </ng-template>\r\n    <div class=\"cal-open-day-events\" [@collapse] *ngIf=\"isOpen\">\r\n      <ng-template\r\n        [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n        [ngTemplateOutletContext]=\"{\r\n          events: events,\r\n          eventClicked: eventClicked\r\n        }\">\r\n      </ng-template>\r\n    </div>\r\n  `,\r\n  animations: [\r\n    trigger('collapse', [\r\n      transition('void => *', [\r\n        style({height: 0}),\r\n        animate('150ms linear', style({height: '*'}))\r\n      ]),\r\n      transition('* => void', [\r\n        style({height: '*'}),\r\n        animate('150ms linear', style({height: 0}))\r\n      ])\r\n    ])\r\n  ]\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'isOpen': [{ type: Input },],\n'events': [{ type: Input },],\n'customTemplate': [{ type: Input },],\n'eventClicked': [{ type: Output },],\n};\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}