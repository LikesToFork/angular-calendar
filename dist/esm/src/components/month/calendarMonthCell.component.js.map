{"version":3,"sources":["../../../../../src/components/month/calendarMonthCell.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAW,KAAA,EAAO,MAAA,EAAQ,YAAA,EAA0B,MAAO,eAAA,CAAgB;AAIpF;IAAA;QAYG,iBAAY,GAAsB,IAAI,YAAY,EAAE,CAAC;QAErD,mBAAc,GAAsB,IAAI,YAAY,EAAE,CAAC;QAEvD,iBAAY,GAAyC,IAAI,YAAY,EAA0B,CAAC;IA8EnG,CAAC;IA5EC;;OAEG;IACH,iDAAY,GAAZ,UAAa,UAAsB,EAAE,aAA4B;QAC/D,EAAE,CAAC,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC,CAAC;YAC/B,UAAU,CAAC,eAAe,EAAE,CAAC;QAC/B,CAAC;QACD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,aAAa,EAAC,CAAC,CAAC;IACjD,CAAC;IAoEH,iCAAC;AAAD,CA9FA,AA8FC;;AAlEM,qCAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACxB,QAAQ,EAAE,yBAAyB;gBACnC,QAAQ,EAAE,25CAmCT;gBACD,IAAI,EAAE;oBACJ,OAAO,EAAE,uBAAuB;oBAChC,kBAAkB,EAAE,YAAY;oBAChC,mBAAmB,EAAE,aAAa;oBAClC,oBAAoB,EAAE,cAAc;oBACpC,qBAAqB,EAAE,eAAe;oBACtC,sBAAsB,EAAE,aAAa;oBACrC,uBAAuB,EAAE,cAAc;oBACvC,wBAAwB,EAAE,uBAAuB;oBACjD,kBAAkB,EAAE,iBAAiB;oBACrC,yBAAyB,EAAE,qBAAqB;iBACjD;aACF,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,yCAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;AACK,yCAAc,GAA2C;IAChE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IACzB,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC7B,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC5B,kBAAkB,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IACtC,gBAAgB,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IACpC,cAAc,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;IACnC,gBAAgB,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;IACrC,cAAc,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;CAClC,CAAC","file":"calendarMonthCell.component.js","sourceRoot":"","sourcesContent":["import { Component, Input, Output, EventEmitter, TemplateRef } from '@angular/core';\r\nimport { MonthViewDay, CalendarEvent } from 'calendar-utils';\r\n\r\n\r\nexport class CalendarMonthCellComponent {\r\n\r\n   day: MonthViewDay;\r\n\r\n   openDay: MonthViewDay;\r\n\r\n   locale: string;\r\n\r\n   tooltipPlacement: string;\r\n\r\n   customTemplate: TemplateRef<any>;\r\n\r\n   highlightDay: EventEmitter<any> = new EventEmitter();\r\n\r\n   unhighlightDay: EventEmitter<any> = new EventEmitter();\r\n\r\n   eventClicked: EventEmitter<{event: CalendarEvent}> = new EventEmitter<{event: CalendarEvent}>();\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  onEventClick(mouseEvent: MouseEvent, calendarEvent: CalendarEvent): void {\r\n    if (mouseEvent.stopPropagation) {\r\n      mouseEvent.stopPropagation();\r\n    }\r\n    this.eventClicked.emit({event: calendarEvent});\r\n  }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n  selector: 'mwl-calendar-month-cell',\r\n  template: `\r\n    <ng-template #defaultTemplate>\r\n      <div class=\"cal-cell-top\">\r\n        <span class=\"cal-day-badge\" *ngIf=\"day.badgeTotal > 0\">{{ day.badgeTotal }}</span>\r\n        <span class=\"cal-day-number\">{{ day.date | calendarDate:'monthViewDayNumber':locale }}</span>\r\n      </div>\r\n      <div class=\"cal-events\" *ngIf=\"day.events.length > 0\">\r\n        <div\r\n          class=\"cal-event\"\r\n          *ngFor=\"let event of day.events\"\r\n          [style.backgroundColor]=\"event.color.primary\"\r\n          [ngClass]=\"event?.cssClass\"\r\n          (mouseenter)=\"highlightDay.emit({event: event})\"\r\n          (mouseleave)=\"unhighlightDay.emit({event: event})\"\r\n          [mwlCalendarTooltip]=\"event.title | calendarEventTitle:'monthTooltip':event\"\r\n          [tooltipPlacement]=\"tooltipPlacement\"\r\n          mwlDraggable\r\n          [dropData]=\"{event: event}\"\r\n          [dragAxis]=\"{x: event.draggable, y: event.draggable}\"\r\n          (mwlClick)=\"onEventClick($event, event)\">\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n      [ngTemplateOutletContext]=\"{\r\n        day: day,\r\n        openDay: openDay,\r\n        locale: locale,\r\n        tooltipPlacement: tooltipPlacement,\r\n        highlightDay: highlightDay,\r\n        unhighlightDay: unhighlightDay,\r\n        eventClicked: eventClicked\r\n      }\">\r\n    </ng-template>\r\n  `,\r\n  host: {\r\n    'class': 'cal-cell cal-day-cell',\r\n    '[class.cal-past]': 'day.isPast',\r\n    '[class.cal-today]': 'day.isToday',\r\n    '[class.cal-future]': 'day.isFuture',\r\n    '[class.cal-weekend]': 'day.isWeekend',\r\n    '[class.cal-in-month]': 'day.inMonth',\r\n    '[class.cal-out-month]': '!day.inMonth',\r\n    '[class.cal-has-events]': 'day.events.length > 0',\r\n    '[class.cal-open]': 'day === openDay',\r\n    '[style.backgroundColor]': 'day.backgroundColor'\r\n  }\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'day': [{ type: Input },],\n'openDay': [{ type: Input },],\n'locale': [{ type: Input },],\n'tooltipPlacement': [{ type: Input },],\n'customTemplate': [{ type: Input },],\n'highlightDay': [{ type: Output },],\n'unhighlightDay': [{ type: Output },],\n'eventClicked': [{ type: Output },],\n};\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}