{"version":3,"sources":["../../../../../src/components/day/calendarAllDayEvent.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAW,KAAA,EAAO,MAAA,EAAQ,YAAA,EAA0B,MAAO,eAAA,CAAgB;AAIpF;IAAA;QAMG,iBAAY,GAAsB,IAAI,YAAY,EAAE,CAAC;IAqCxD,CAAC;IAAD,mCAAC;AAAD,CA3CA,AA2CC;;AAnCM,uCAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACxB,QAAQ,EAAE,4BAA4B;gBACtC,QAAQ,EAAE,isBAqBT;aACF,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,2CAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;AACK,2CAAc,GAA2C;IAChE,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC3B,gBAAgB,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IACpC,cAAc,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;CAClC,CAAC","file":"calendarAllDayEvent.component.js","sourceRoot":"","sourcesContent":["import { Component, Input, Output, EventEmitter, TemplateRef } from '@angular/core';\r\nimport { CalendarEvent } from 'calendar-utils';\r\n\r\n\r\nexport class CalendarAllDayEventComponent {\r\n\r\n   event: CalendarEvent;\r\n\r\n   customTemplate: TemplateRef<any>;\r\n\r\n   eventClicked: EventEmitter<any> = new EventEmitter();\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n  selector: 'mwl-calendar-all-day-event',\r\n  template: `\r\n    <ng-template #defaultTemplate>\r\n      <div\r\n        class=\"cal-all-day-event\"\r\n        [style.backgroundColor]=\"event.color.secondary\"\r\n        [style.borderColor]=\"event.color.primary\">\r\n        <mwl-calendar-event-actions [event]=\"event\"></mwl-calendar-event-actions>\r\n        <mwl-calendar-event-title\r\n          [event]=\"event\"\r\n          view=\"day\"\r\n          (mwlClick)=\"eventClicked.emit()\">\r\n        </mwl-calendar-event-title>\r\n      </div>\r\n    </ng-template>\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n      [ngTemplateOutletContext]=\"{\r\n        event: event,\r\n        eventClicked: eventClicked\r\n      }\">\r\n    </ng-template>\r\n  `\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'event': [{ type: Input },],\n'customTemplate': [{ type: Input },],\n'eventClicked': [{ type: Output },],\n};\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}