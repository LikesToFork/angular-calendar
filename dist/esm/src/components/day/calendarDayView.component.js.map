{"version":3,"sources":["../../../../../src/components/day/calendarDayView.component.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,SAAS,EACT,KAAK,EAEL,MAAM,EACN,YAAY,EACZ,iBAAiB,EACjB,SAAS,EACT,MAAM,EAIP,MAAM,eAAA,CAAgB;AAWvB,OAAO,UAAA,MAAgB,sBAAA,CAAuB;AAC9C,OAAO,EAAE,kBAAA,EAAmB,MAAO,6CAAA,CAA8C;AACjF,OAAO,EAAE,oBAAA,EAAqB,MAAO,+CAAA,CAAgD;AAErF,OAAO,EAAE,aAAA,EAAc,MAAO,wCAAA,CAAyC;AAEvE;;GAEG;AACH,IAAM,cAAA,GAAyB,EAAA,CAAG;AAElC;;GAEG;AACH,IAAM,eAAA,GAA0B,EAAA,CAAG;AAEnC;;;;;;;;;GASG;AAEH;IAyIE;;OAEG;IACH,kCAAoB,GAAsB,EAAU,KAAoB,EAAG,MAAc;QAArE,QAAG,GAAH,GAAG,CAAmB;QAAU,UAAK,GAAL,KAAK,CAAe;QArIxE;;WAEG;QACF,WAAM,GAAoB,EAAE,CAAC;QAE9B;;WAEG;QACF,iBAAY,GAAW,CAAC,CAAC;QAE1B;;WAEG;QACF,iBAAY,GAAW,CAAC,CAAC;QAE1B;;WAEG;QACF,mBAAc,GAAW,CAAC,CAAC;QAE5B;;WAEG;QACF,eAAU,GAAW,EAAE,CAAC;QAEzB;;WAEG;QACF,iBAAY,GAAW,EAAE,CAAC;QAE3B;;WAEG;QACF,eAAU,GAAW,GAAG,CAAC;QAkB1B;;WAEG;QACF,kBAAa,GAAW,EAAE,CAAC;QAE5B;;WAEG;QACF,qBAAgB,GAAW,KAAK,CAAC;QAiBlC;;WAEG;QACF,iBAAY,GAAyC,IAAI,YAAY,EAA0B,CAAC;QAEjG;;WAEG;QACF,uBAAkB,GAA+B,IAAI,YAAY,EAAgB,CAAC;QAEnF;;WAEG;QACF,sBAAiB,GAAiD,IAAI,YAAY,EAAkC,CAAC;QAEtH;;WAEG;QACH,UAAK,GAAkB,EAAE,CAAC;QAO1B;;WAEG;QACH,UAAK,GAAW,CAAC,CAAC;QA8BhB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACvB,CAAC;IAED;;OAEG;IACH,2CAAQ,GAAR;QAAA,iBAOC;QANC,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YACjB,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;gBAChD,KAAI,CAAC,UAAU,EAAE,CAAC;gBAClB,KAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;YAC1B,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAED;;OAEG;IACH,8CAAW,GAAX;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC;YAC7B,IAAI,CAAC,mBAAmB,CAAC,WAAW,EAAE,CAAC;QACzC,CAAC;IACH,CAAC;IAED;;OAEG;IACH,8CAAW,GAAX,UAAY,OAAY;QAEtB,EAAE,CAAC,CACD,OAAO,CAAC,QAAQ;YAChB,OAAO,CAAC,YAAY;YACpB,OAAO,CAAC,cAAc;YACtB,OAAO,CAAC,UAAU;YAClB,OAAO,CAAC,YACV,CAAC,CAAC,CAAC;YACD,IAAI,CAAC,eAAe,EAAE,CAAC;QACzB,CAAC;QAED,EAAE,CAAC,CACD,OAAO,CAAC,QAAQ;YAChB,OAAO,CAAC,MAAM;YACd,OAAO,CAAC,YAAY;YACpB,OAAO,CAAC,cAAc;YACtB,OAAO,CAAC,UAAU;YAClB,OAAO,CAAC,YAAY;YACpB,OAAO,CAAC,UACV,CAAC,CAAC,CAAC;YACD,IAAI,CAAC,WAAW,EAAE,CAAC;QACrB,CAAC;IAEH,CAAC;IAED,+CAAY,GAAZ,UAAa,SAA+C,EAAE,OAA2B;QACvF,EAAE,CAAC,CAAC,SAAS,CAAC,QAAQ,IAAI,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;YACnD,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,SAAS,CAAC,QAAQ,CAAC,KAAK,EAAE,QAAQ,EAAE,OAAO,CAAC,IAAI,EAAC,CAAC,CAAC;QACzF,CAAC;IACH,CAAC;IAED,gDAAa,GAAb,UAAc,KAAmB,EAAE,WAAwB,EAAE,gBAA6B;QACxF,IAAI,CAAC,aAAa,GAAG;YACnB,WAAW,EAAE,KAAK,CAAC,GAAG;YACtB,cAAc,EAAE,KAAK,CAAC,MAAM;YAC5B,IAAI,EAAE,OAAO,WAAW,CAAC,KAAK,CAAC,GAAG,KAAK,WAAW,GAAG,KAAK,GAAG,QAAQ;SACtE,CAAC;QACF,IAAM,YAAY,GAAyB,IAAI,oBAAoB,CAAC,gBAAgB,CAAC,CAAC;QACtF,IAAI,CAAC,cAAc,GAAG,UAAC,EAAW;gBAAV,wBAAS;YAAM,OAAA,YAAY,CAAC,cAAc,CAAC,EAAC,SAAS,WAAA,EAAC,CAAC;QAAxC,CAAwC,CAAC;QAChF,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;IAC1B,CAAC;IAED,2CAAQ,GAAR,UAAS,KAAmB,EAAE,WAAwB;QACpD,EAAE,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;YAC1B,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,GAAG,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC;YACpE,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,cAAc,GAAG,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC;QAC5E,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;YACpC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,cAAc,GAAG,CAAC,WAAW,CAAC,KAAK,CAAC,MAAM,CAAC;QAC/E,CAAC;IACH,CAAC;IAED,8CAAW,GAAX,UAAY,QAAsB;QAEhC,IAAI,WAAmB,CAAC;QACxB,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,KAAK,KAAK,CAAC,CAAC,CAAC;YACtC,WAAW,GAAG,CAAC,QAAQ,CAAC,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;QAChE,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,WAAW,GAAG,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;QACtE,CAAC;QAED,QAAQ,CAAC,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC;QAC9C,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC;QAEpD,IAAM,oBAAoB,GAAW,eAAe,GAAG,CAAC,IAAI,CAAC,YAAY,GAAG,cAAc,CAAC,CAAC;QAC5F,IAAM,YAAY,GAAW,WAAW,GAAG,oBAAoB,CAAC;QAChE,IAAI,QAAQ,GAAS,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC;QAC1C,IAAI,MAAM,GAAS,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC;QACtC,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,KAAK,KAAK,CAAC,CAAC,CAAC;YACtC,QAAQ,GAAG,UAAU,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;QAChD,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YAClB,MAAM,GAAG,UAAU,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;QAC5C,CAAC;QAED,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAC,QAAQ,UAAA,EAAE,MAAM,QAAA,EAAE,KAAK,EAAE,QAAQ,CAAC,KAAK,EAAC,CAAC,CAAC;QACvE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;IAE5B,CAAC;IAED,4CAAS,GAAT,UAAU,KAAkB,EAAE,gBAA6B;QAA3D,iBAIC;QAHC,IAAM,UAAU,GAAuB,IAAI,kBAAkB,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC;QACvF,IAAI,CAAC,YAAY,GAAG,UAAC,EAAM;gBAAL,QAAC,EAAE,QAAC;YAAM,OAAA,CAAC,KAAI,CAAC,aAAa,IAAI,UAAU,CAAC,YAAY,CAAC,EAAC,CAAC,GAAA,EAAE,CAAC,GAAA,EAAC,CAAC;QAAtD,CAAsD,CAAC;QACvF,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;IAC1B,CAAC;IAED,+CAAY,GAAZ,UAAa,QAAsB,EAAE,eAAuB;QAC1D,IAAM,oBAAoB,GAAW,eAAe,GAAG,CAAC,IAAI,CAAC,YAAY,GAAG,cAAc,CAAC,CAAC;QAC5F,IAAM,YAAY,GAAW,eAAe,GAAG,oBAAoB,CAAC;QACpE,IAAM,QAAQ,GAAS,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC;QACtE,IAAI,MAAY,CAAC;QACjB,EAAE,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;YACvB,MAAM,GAAG,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,EAAE,YAAY,CAAC,CAAC;QACxD,CAAC;QACD,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAC,QAAQ,UAAA,EAAE,MAAM,QAAA,EAAE,KAAK,EAAE,QAAQ,CAAC,KAAK,EAAC,CAAC,CAAC;IACzE,CAAC;IAEO,kDAAe,GAAvB;QAAA,iBAkBC;QAjBC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC;YACzC,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,YAAY,EAAE,IAAI,CAAC,YAAY;YAC/B,QAAQ,EAAE;gBACR,IAAI,EAAE,IAAI,CAAC,YAAY;gBACvB,MAAM,EAAE,IAAI,CAAC,cAAc;aAC5B;YACD,MAAM,EAAE;gBACN,IAAI,EAAE,IAAI,CAAC,UAAU;gBACrB,MAAM,EAAE,IAAI,CAAC,YAAY;aAC1B;SACF,CAAC,CAAC;QACH,EAAE,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC;YAC7B,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAA,IAAI;gBACrB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAA,OAAO,IAAI,OAAA,KAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,EAAjC,CAAiC,CAAC,CAAC;YACtE,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAEO,8CAAW,GAAnB;QACE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC;YAChC,MAAM,EAAE,IAAI,CAAC,MAAM;YACnB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,YAAY,EAAE,IAAI,CAAC,YAAY;YAC/B,QAAQ,EAAE;gBACR,IAAI,EAAE,IAAI,CAAC,YAAY;gBACvB,MAAM,EAAE,IAAI,CAAC,cAAc;aAC5B;YACD,MAAM,EAAE;gBACN,IAAI,EAAE,IAAI,CAAC,UAAU;gBACrB,MAAM,EAAE,IAAI,CAAC,YAAY;aAC1B;YACD,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,aAAa,EAAE,cAAc;SAC9B,CAAC,CAAC;IACL,CAAC;IAEO,6CAAU,GAAlB;QACE,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IA2FH,+BAAC;AAAD,CA5YA,AA4YC;;AAzFM,mCAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACxB,QAAQ,EAAE,uBAAuB;gBACjC,QAAQ,EAAE,6oFAwDT;aACF,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,uCAAc,GAAmE,cAAM,OAAA;IAC9F,EAAC,IAAI,EAAE,iBAAiB,GAAG;IAC3B,EAAC,IAAI,EAAE,aAAa,GAAG;IACvB,EAAC,IAAI,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,SAAS,EAAG,EAAE,EAAG,EAAC;CACvE,EAJ6F,CAI7F,CAAC;AACK,uCAAc,GAA2C;IAChE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC9B,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC5B,cAAc,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAClC,cAAc,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAClC,gBAAgB,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IACpC,YAAY,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAChC,cAAc,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAClC,YAAY,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAChC,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC7B,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC5B,qBAAqB,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IACzC,eAAe,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IACnC,kBAAkB,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IACtC,qBAAqB,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IACzC,qBAAqB,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IACzC,eAAe,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IACnC,cAAc,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;IACnC,oBAAoB,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;IACzC,mBAAmB,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;CACvC,CAAC","file":"calendarDayView.component.js","sourceRoot":"","sourcesContent":["import {\r\n  Component,\r\n  Input,\r\n  OnChanges,\r\n  Output,\r\n  EventEmitter,\r\n  ChangeDetectorRef,\r\n  LOCALE_ID,\r\n  Inject,\r\n  OnInit,\r\n  OnDestroy,\r\n  TemplateRef\r\n} from '@angular/core';\r\nimport {\r\n  CalendarEvent,\r\n  DayView,\r\n  DayViewHour,\r\n  DayViewHourSegment,\r\n  DayViewEvent\r\n} from 'calendar-utils';\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport { ResizeEvent } from 'angular-resizable-element';\r\nimport addMinutes from 'date-fns/add_minutes';\r\nimport { CalendarDragHelper } from '../../providers/calendarDragHelper.provider';\r\nimport { CalendarResizeHelper } from '../../providers/calendarResizeHelper.provider';\r\nimport { CalendarEventTimesChangedEvent } from '../../interfaces/calendarEventTimesChangedEvent.interface';\r\nimport { CalendarUtils } from '../../providers/calendarUtils.provider';\r\n\r\n/**\r\n * @hidden\r\n */\r\nconst SEGMENT_HEIGHT: number = 30;\r\n\r\n/**\r\n * @hidden\r\n */\r\nconst MINUTES_IN_HOUR: number = 60;\r\n\r\n/**\r\n * Shows all events on a given day. Example usage:\r\n *\r\n * ```typescript\r\n * &lt;mwl-calendar-day-view\r\n *  [viewDate]=\"viewDate\"\r\n *  [events]=\"events\"&gt;\r\n * &lt;/mwl-calendar-day-view&gt;\r\n * ```\r\n */\r\n\r\nexport class CalendarDayViewComponent implements OnChanges, OnInit, OnDestroy {\r\n\r\n  /**\r\n   * The current view date\r\n   */\r\n   viewDate: Date;\r\n\r\n  /**\r\n   * An array of events to display on view\r\n   */\r\n   events: CalendarEvent[] = [];\r\n\r\n  /**\r\n   * The number of segments in an hour. Must be <= 6\r\n   */\r\n   hourSegments: number = 2;\r\n\r\n  /**\r\n   * The day start hours in 24 hour time. Must be 0-23\r\n   */\r\n   dayStartHour: number = 0;\r\n\r\n  /**\r\n   * The day start minutes. Must be 0-59\r\n   */\r\n   dayStartMinute: number = 0;\r\n\r\n  /**\r\n   * The day end hours in 24 hour time. Must be 0-23\r\n   */\r\n   dayEndHour: number = 23;\r\n\r\n  /**\r\n   * The day end minutes. Must be 0-59\r\n   */\r\n   dayEndMinute: number = 59;\r\n\r\n  /**\r\n   * The width in pixels of each event on the view\r\n   */\r\n   eventWidth: number = 150;\r\n\r\n  /**\r\n   * An observable that when emitted on will re-render the current view\r\n   */\r\n   refresh: Subject<any>;\r\n\r\n  /**\r\n   * The locale used to format dates\r\n   */\r\n   locale: string;\r\n\r\n  /**\r\n   * A function that will be called before each hour segment is called. The first argument will contain the hour segment.\r\n   * If you add the `cssClass` property to the segment it will add that class to the hour segment in the template\r\n   */\r\n   hourSegmentModifier: Function;\r\n\r\n  /**\r\n   * The grid size to snap resizing and dragging of events to\r\n   */\r\n   eventSnapSize: number = 30;\r\n\r\n  /**\r\n   * The placement of the event tooltip\r\n   */\r\n   tooltipPlacement: string = 'top';\r\n\r\n  /**\r\n   * A custom template to use to replace the hour segment\r\n   */\r\n   hourSegmentTemplate: TemplateRef<any>;\r\n\r\n  /**\r\n   * A custom template to use for all day events\r\n   */\r\n   allDayEventTemplate: TemplateRef<any>;\r\n\r\n  /**\r\n   * A custom template to use for day view events\r\n   */\r\n   eventTemplate: TemplateRef<any>;\r\n\r\n  /**\r\n   * Called when an event title is clicked\r\n   */\r\n   eventClicked: EventEmitter<{event: CalendarEvent}> = new EventEmitter<{event: CalendarEvent}>();\r\n\r\n  /**\r\n   * Called when an hour segment is clicked\r\n   */\r\n   hourSegmentClicked: EventEmitter<{date: Date}> = new EventEmitter<{date: Date}>();\r\n\r\n  /**\r\n   * Called when an event is resized or dragged and dropped\r\n   */\r\n   eventTimesChanged: EventEmitter<CalendarEventTimesChangedEvent> = new EventEmitter<CalendarEventTimesChangedEvent>();\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  hours: DayViewHour[] = [];\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  view: DayView;\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  width: number = 0;\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  refreshSubscription: Subscription;\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  currentResize: {\r\n    originalTop: number,\r\n    originalHeight: number,\r\n    edge: string\r\n  };\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  validateDrag: Function;\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  validateResize: Function;\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  constructor(private cdr: ChangeDetectorRef, private utils: CalendarUtils,  locale: string) {\r\n    this.locale = locale;\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  ngOnInit(): void {\r\n    if (this.refresh) {\r\n      this.refreshSubscription = this.refresh.subscribe(() => {\r\n        this.refreshAll();\r\n        this.cdr.markForCheck();\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  ngOnDestroy(): void {\r\n    if (this.refreshSubscription) {\r\n      this.refreshSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  ngOnChanges(changes: any): void {\r\n\r\n    if (\r\n      changes.viewDate ||\r\n      changes.dayStartHour ||\r\n      changes.dayStartMinute ||\r\n      changes.dayEndHour ||\r\n      changes.dayEndMinute\r\n    ) {\r\n      this.refreshHourGrid();\r\n    }\r\n\r\n    if (\r\n      changes.viewDate ||\r\n      changes.events ||\r\n      changes.dayStartHour ||\r\n      changes.dayStartMinute ||\r\n      changes.dayEndHour ||\r\n      changes.dayEndMinute ||\r\n      changes.eventWidth\r\n    ) {\r\n      this.refreshView();\r\n    }\r\n\r\n  }\r\n\r\n  eventDropped(dropEvent: {dropData?: {event?: CalendarEvent}}, segment: DayViewHourSegment): void {\r\n    if (dropEvent.dropData && dropEvent.dropData.event) {\r\n      this.eventTimesChanged.emit({event: dropEvent.dropData.event, newStart: segment.date});\r\n    }\r\n  }\r\n\r\n  resizeStarted(event: DayViewEvent, resizeEvent: ResizeEvent, dayViewContainer: HTMLElement): void {\r\n    this.currentResize = {\r\n      originalTop: event.top,\r\n      originalHeight: event.height,\r\n      edge: typeof resizeEvent.edges.top !== 'undefined' ? 'top' : 'bottom'\r\n    };\r\n    const resizeHelper: CalendarResizeHelper = new CalendarResizeHelper(dayViewContainer);\r\n    this.validateResize = ({rectangle}) => resizeHelper.validateResize({rectangle});\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  resizing(event: DayViewEvent, resizeEvent: ResizeEvent): void {\r\n    if (resizeEvent.edges.top) {\r\n      event.top = this.currentResize.originalTop + +resizeEvent.edges.top;\r\n      event.height = this.currentResize.originalHeight - +resizeEvent.edges.top;\r\n    } else if (resizeEvent.edges.bottom) {\r\n      event.height = this.currentResize.originalHeight + +resizeEvent.edges.bottom;\r\n    }\r\n  }\r\n\r\n  resizeEnded(dayEvent: DayViewEvent): void {\r\n\r\n    let pixelsMoved: number;\r\n    if (this.currentResize.edge === 'top') {\r\n      pixelsMoved = (dayEvent.top - this.currentResize.originalTop);\r\n    } else {\r\n      pixelsMoved = (dayEvent.height - this.currentResize.originalHeight);\r\n    }\r\n\r\n    dayEvent.top = this.currentResize.originalTop;\r\n    dayEvent.height = this.currentResize.originalHeight;\r\n\r\n    const pixelAmountInMinutes: number = MINUTES_IN_HOUR / (this.hourSegments * SEGMENT_HEIGHT);\r\n    const minutesMoved: number = pixelsMoved * pixelAmountInMinutes;\r\n    let newStart: Date = dayEvent.event.start;\r\n    let newEnd: Date = dayEvent.event.end;\r\n    if (this.currentResize.edge === 'top') {\r\n      newStart = addMinutes(newStart, minutesMoved);\r\n    } else if (newEnd) {\r\n      newEnd = addMinutes(newEnd, minutesMoved);\r\n    }\r\n\r\n    this.eventTimesChanged.emit({newStart, newEnd, event: dayEvent.event});\r\n    this.currentResize = null;\r\n\r\n  }\r\n\r\n  dragStart(event: HTMLElement, dayViewContainer: HTMLElement): void {\r\n    const dragHelper: CalendarDragHelper = new CalendarDragHelper(dayViewContainer, event);\r\n    this.validateDrag = ({x, y}) => !this.currentResize && dragHelper.validateDrag({x, y});\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  eventDragged(dayEvent: DayViewEvent, draggedInPixels: number): void {\r\n    const pixelAmountInMinutes: number = MINUTES_IN_HOUR / (this.hourSegments * SEGMENT_HEIGHT);\r\n    const minutesMoved: number = draggedInPixels * pixelAmountInMinutes;\r\n    const newStart: Date = addMinutes(dayEvent.event.start, minutesMoved);\r\n    let newEnd: Date;\r\n    if (dayEvent.event.end) {\r\n      newEnd = addMinutes(dayEvent.event.end, minutesMoved);\r\n    }\r\n    this.eventTimesChanged.emit({newStart, newEnd, event: dayEvent.event});\r\n  }\r\n\r\n  private refreshHourGrid(): void {\r\n    this.hours = this.utils.getDayViewHourGrid({\r\n      viewDate: this.viewDate,\r\n      hourSegments: this.hourSegments,\r\n      dayStart: {\r\n        hour: this.dayStartHour,\r\n        minute: this.dayStartMinute\r\n      },\r\n      dayEnd: {\r\n        hour: this.dayEndHour,\r\n        minute: this.dayEndMinute\r\n      }\r\n    });\r\n    if (this.hourSegmentModifier) {\r\n      this.hours.forEach(hour => {\r\n        hour.segments.forEach(segment => this.hourSegmentModifier(segment));\r\n      });\r\n    }\r\n  }\r\n\r\n  private refreshView(): void {\r\n    this.view = this.utils.getDayView({\r\n      events: this.events,\r\n      viewDate: this.viewDate,\r\n      hourSegments: this.hourSegments,\r\n      dayStart: {\r\n        hour: this.dayStartHour,\r\n        minute: this.dayStartMinute\r\n      },\r\n      dayEnd: {\r\n        hour: this.dayEndHour,\r\n        minute: this.dayEndMinute\r\n      },\r\n      eventWidth: this.eventWidth,\r\n      segmentHeight: SEGMENT_HEIGHT\r\n    });\r\n  }\r\n\r\n  private refreshAll(): void {\r\n    this.refreshHourGrid();\r\n    this.refreshView();\r\n  }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n  selector: 'mwl-calendar-day-view',\r\n  template: `\r\n    <div class=\"cal-day-view\" #dayViewContainer>\r\n      <mwl-calendar-all-day-event\r\n        *ngFor=\"let event of view.allDayEvents\"\r\n        [event]=\"event\"\r\n        [customTemplate]=\"allDayEventTemplate\"\r\n        (eventClicked)=\"eventClicked.emit({event: event})\">\r\n      </mwl-calendar-all-day-event>\r\n      <div class=\"cal-hour-rows\">\r\n        <div class=\"cal-events\">\r\n          <div\r\n            #event\r\n            *ngFor=\"let dayEvent of view?.events\"\r\n            class=\"cal-event-container\"\r\n            [class.cal-draggable]=\"dayEvent.event.draggable\"\r\n            mwlResizable\r\n            [resizeEdges]=\"{top: dayEvent.event?.resizable?.beforeStart, bottom: dayEvent.event?.resizable?.afterEnd}\"\r\n            [resizeSnapGrid]=\"{top: eventSnapSize, bottom: eventSnapSize}\"\r\n            [validateResize]=\"validateResize\"\r\n            (resizeStart)=\"resizeStarted(dayEvent, $event, dayViewContainer)\"\r\n            (resizing)=\"resizing(dayEvent, $event)\"\r\n            (resizeEnd)=\"resizeEnded(dayEvent)\"\r\n            mwlDraggable\r\n            [dragAxis]=\"{x: false, y: dayEvent.event.draggable && !currentResize}\"\r\n            [dragSnapGrid]=\"{y: eventSnapSize}\"\r\n            [validateDrag]=\"validateDrag\"\r\n            (dragStart)=\"dragStart(event, dayViewContainer)\"\r\n            (dragEnd)=\"eventDragged(dayEvent, $event.y)\"\r\n            [style.marginTop.px]=\"dayEvent.top\"\r\n            [style.height.px]=\"dayEvent.height\"\r\n            [style.marginLeft.px]=\"dayEvent.left + 70\"\r\n            [style.width.px]=\"dayEvent.width - 1\">\r\n            <mwl-calendar-day-view-event\r\n              [dayEvent]=\"dayEvent\"\r\n              [tooltipPlacement]=\"tooltipPlacement\"\r\n              [customTemplate]=\"eventTemplate\"\r\n              (eventClicked)=\"eventClicked.emit({event: dayEvent.event})\">\r\n            </mwl-calendar-day-view-event>\r\n          </div>\r\n        </div>\r\n        <div class=\"cal-hour\" *ngFor=\"let hour of hours\" [style.minWidth.px]=\"view?.width + 70\">\r\n          <mwl-calendar-day-view-hour-segment\r\n            *ngFor=\"let segment of hour.segments\"\r\n            [segment]=\"segment\"\r\n            [locale]=\"locale\"\r\n            [customTemplate]=\"hourSegmentTemplate\"\r\n            (mwlClick)=\"hourSegmentClicked.emit({date: segment.date})\"\r\n            [class.cal-drag-over]=\"segment.dragOver\"\r\n            mwlDroppable\r\n            (dragEnter)=\"segment.dragOver = true\"\r\n            (dragLeave)=\"segment.dragOver = false\"\r\n            (drop)=\"segment.dragOver = false; eventDropped($event, segment)\">\r\n          </mwl-calendar-day-view-hour-segment>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ChangeDetectorRef, },\n{type: CalendarUtils, },\n{type: undefined, decorators: [{ type: Inject, args: [LOCALE_ID, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'viewDate': [{ type: Input },],\n'events': [{ type: Input },],\n'hourSegments': [{ type: Input },],\n'dayStartHour': [{ type: Input },],\n'dayStartMinute': [{ type: Input },],\n'dayEndHour': [{ type: Input },],\n'dayEndMinute': [{ type: Input },],\n'eventWidth': [{ type: Input },],\n'refresh': [{ type: Input },],\n'locale': [{ type: Input },],\n'hourSegmentModifier': [{ type: Input },],\n'eventSnapSize': [{ type: Input },],\n'tooltipPlacement': [{ type: Input },],\n'hourSegmentTemplate': [{ type: Input },],\n'allDayEventTemplate': [{ type: Input },],\n'eventTemplate': [{ type: Input },],\n'eventClicked': [{ type: Output },],\n'hourSegmentClicked': [{ type: Output },],\n'eventTimesChanged': [{ type: Output },],\n};\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}